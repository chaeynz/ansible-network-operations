# Playbook to add all VMs from VMware vCenter to Netbox
# Required to use community.vmware.vmware_vm_inventory as inventory source
---
- name: Import VMware VMs into Netbox
  hosts: all
  strategy: linear
  vars:
    credentials: &credentials
      netbox_url: "{{ lookup('ansible.builtin.env', 'NETBOX_API') }}"
      netbox_token: "{{ lookup('ansible.builtin.env', 'NETBOX_TOKEN') }}"
      validate_certs: "{{ _validate_certs | default(true) }}"
    vcenter_tenant_tag_category: "{{ _vcenter_tenant_tag_category | default('Tenant') }}"
  tasks:
    - name: "Gather facts from hosts using builtin setup module"
      ansible.builtin.setup:
        gather_subset:
          - network
          - os_family
          - pkg_mgr
          - hardware

    - name: Fail if hostnames mismatch
      when: inventory_hostname.split('_')[0] != ansible_fqdn
      ansible.builtin.fail:

    - name: Ensure cluster exists
      run_once: true
      delegate_to: localhost
      netbox.netbox.netbox_cluster:
        <<: *credentials
        data:
          name: "{{ path.split('/')[1] }}"
          cluster_type: "vCenter"
        state: present


    - name: Add VM to Netbox
      delegate_to: localhost
      netbox.netbox.netbox_virtual_machine:
        <<: *credentials
        data:
          name: "{{ ansible_fqdn }}"
          cluster: "{{ path.split('/')[1] }}"
          status: active
          vcpus: "{{ config.hardware.numCPU }}"
          memory: "{{ runtime.maxMemoryUsage }}"
          serial: "{{ inventory_hostname | ansible.builtin.regex_replace(ansible_fqdn + '_') }}"
          tenant: "{{ hostvars[inventory_hostname].get('tag_category', {}).get(vcenter_tenant_tag_category, []) | first | default(omit) }}"
          custom_fields:
            guest_os: "{{ config.guestId | upper }}"
        state: present

    - name: Create virtual disk
      delegate_to: localhost
      loop: "{{ config.hardware.device | selectattr('capacityInBytes', 'defined') | list }}"
      netbox.netbox.netbox_virtual_disk:
        <<: *credentials
        data:
          virtual_machine: "{{ ansible_fqdn }}"
          name: "{{ item.backing.fileName.split('/')[-1] }}"
          size: "{{ item.capacityInBytes / (1024**3) * 1000 }}"
          custom_fields:
            datastore: "{{ item.backing.fileName.split(' ')[0][1:-1] }}"
        state: present

    - name: Add interface
      delegate_to: localhost
      netbox.netbox.netbox_vm_interface:
        <<: *credentials
        data:
          virtual_machine: "{{ ansible_fqdn }}"
          name: "{{ ansible_default_ipv4.interface }}"
        state: present

    - name: Add IP
      delegate_to: localhost
      netbox.netbox.netbox_ip_address:
        <<: *credentials
        data:
          address: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.prefix }}"
          tenant: "{{ hostvars[inventory_hostname].get('tag_category', {}).get(vcenter_tenant_tag_category, []) | first | default(omit) }}"
          assigned_object:
            name: "{{ ansible_default_ipv4.interface }}"
            virtual_machine: "{{ ansible_fqdn }}"
        state: present

    - name: Set primary IP
      delegate_to: localhost
      netbox.netbox.netbox_virtual_machine:
        <<: *credentials
        data:
          name: "{{ ansible_fqdn }}"
          primary_ip4: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.prefix }}"
        state: present
