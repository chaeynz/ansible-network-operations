- name: Show connection and network_os
  debug:
    msg:
      - "{{ ansible_connection }}"
      - "{{ ansible_network_os }}"

- name: Ensure network device facts are gathered
  ansible.builtin.include_tasks: "{{ item }}"
  with_first_found:
    - "{{ role_path }}/tasks/{{ ansible_network_os | lower | split('.') | last }}.yml"
    - "{{ role_path }}/tasks/unsupported.yml"

- name: Clone git
  run_once: true
  delegate_to: localhost
  ansible.builtin.git:
    force: true
    repo: "{{ repo_url | mandatory }}"
    dest: /tmp/git/backups
    key_file: "{{ lookup('ansible.builtin.env', 'SSH_KEY', default=omit) }}"
    accept_hostkey: true

- name: Ensure directory for platform is present in git repo
  run_once: true
  delegate_to: localhost
  ansible.builtin.file:
    state: directory
    path: "/tmp/git/backups/{{ ansible_network_os.split('.') | last }}"

- name: Save config to file
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ config }}"
    dest: "/tmp/git/backups/{{ ansible_network_os.split('.') | last }}/{{ inventory_hostname }}"
    mode: '0644'

- name: Commit in git repository
  delegate_to: localhost
  ansible.builtin.shell: >
    cd /tmp/git/backups &&
    /usr/bin/git add * &&
    /usr/bin/git commit -m "{{ inventory_hostname }} | Automated configuration backup"
  register: result
  changed_when: "'nothing to commit' not in result.stdout"
  failed_when: false
  throttle: 1

- name: Push to git
  delegate_to: localhost
  run_once: true
  ansible.builtin.shell: >
    cd /tmp/git/backups &&
    GIT_SSH_COMMAND="ssh -i {{ lookup('ansible.builtin.env', 'SSH_KEY', default=omit) }}" /usr/bin/git push -u origin main
  register: result
  changed_when: "'Everything up-to-date' not in result.stderr"
